spring.application.name: review
server.port: 7003
server.error.include-message: always

# Spring datasource
#spring:
#    datasource:
#        url: jdbc:mysql://localhost:3306/review-db
#        username: user
#        password: pwd
#        hikari:
#            initialization-fail-timeout: 60000
#    jpa.hibernate.ddl-auto: update

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/review-db
    username: user
    password: pwd
    hikari:
      initialization-fail-timeout: 60000
  jpa.hibernate.ddl-auto: update

# Spring cloud stream
spring.cloud.function.definition: messageProcessor

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.messageProcessor-in-0:
    destination: reviews
    group: reviewsGroup

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

# Logging
logging:
  level:
    root: info
    com.rufusy: debug
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

# Health
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

# Eureka
app:
  eureka-server: localhost
  eureka-username: user
  eureka-password: pwd

eureka:
  client:
    service-url.defaultZone: http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

---
spring.config.activate.on-profile: docker

server.port: 8080

app.eureka-server: eureka

#spring.datasource:
#    url: jdbc:mysql://mysql:3306/review-db
#    username: user
#    password: pwd

spring.datasource:
  url: jdbc:postgresql://postgres:5432/review-db
  username: user
  password: pwd

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

---
spring.config.activate.on-profile: streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
  partitioned: true
  instanceCount: 2

---
spring.config.activate.on-profile: streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 0

---
spring.config.activate.on-profile: streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex: 1

---
spring.config.activate.on-profile: kafka

management.health.rabbit.enabled: false
spring.cloud.stream.defaultBinder: kafka
spring.kafka.bootstrap-servers: kafka:9092
spring.cloud.stream.kafka.binder.replication-factor: 1