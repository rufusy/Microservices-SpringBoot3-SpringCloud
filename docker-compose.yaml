services:
  product:
    build: microservices/product-service
    image: rufusy/product-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  recommendation:
    build: microservices/recommendation-service
    image: rufusy/recommendation-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  review:
    build: microservices/review-service
    image: rufusy/review-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  product-composite:
    build: microservices/product-composite-service
    image: rufusy/product-composite-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      rabbitmq:
        condition: service_healthy

  mongodb:
    image: mongo:6.0.4
    container_name: mongodb
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongostat -n 1"
      interval: 5s
      timeout: 2s
      retries: 60

#  mysql:
#    image: mysql:8.0.32
#    container_name: mysql
##    mem_limit: 1024m
#    ports:
#      - "3306:3306"
#    environment:
#      - MYSQL_ROOT_PASSWORD=rootpwd
#      - MYSQL_DATABASE=review-db
#      - MYSQL_USER=user
#      - MYSQL_PASSWORD=pwd
#    healthcheck:
#      test: "/usr/bin/mysql --user=user --password=pwd --execute \"SHOW DATABASES;\""
#      interval: 5s
#      timeout: 2s
#      retries: 60

  rabbitmq:
    image: rabbitmq:3.11.8-management
    container_name: rabbitmq
    mem_limit: 512m
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 2s
      retries: 60

  eureka:
    build: spring-cloud/eureka-server
    image: rufusy/cmp-eureka-server
    mem_limit: 512m

  gateway:
    build: spring-cloud/gateway
    image: rufusy/cmp-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_SSL_KEY_STORE=file:/keystore/edge-test.p12
      - SERVER_SSL_KEY_STORE_PASSWORD=testtest
    volumes:
      - $PWD/keystore:/keystore
    mem_limit: 512m
    ports:
      - "8443:8443"

  auth-server:
    build: spring-cloud/authorization-server
    image: rufusy/cmp-auth-server
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:9999/actuator/health"]
      interval: 5s
      timeout: 2s
      retries: 60

  postgres:
    image: postgres:14  # You can use any version you prefer
    container_name: postgres
    mem_limit: 512m
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=review-db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user" ]
      interval: 5s
      timeout: 2s
      retries: 60
