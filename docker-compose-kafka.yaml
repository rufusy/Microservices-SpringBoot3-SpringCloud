services:
    mongodb:
        image: mongo:6.0.4
        container_name: mongodb
        mem_limit: 512m
        ports:
            - "27017:27017"
        command: mongod
        healthcheck:
            test: "mongostat -n 1"
            interval: 5s
            timeout: 2s
            retries: 60

    postgres:
        image: postgres:14
        container_name: postgres
        mem_limit: 512m
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=user
            - POSTGRES_PASSWORD=pwd
            - POSTGRES_DB=review-db
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "user" ]
            interval: 5s
            timeout: 2s
            retries: 60

    kafka:
        image: confluentinc/cp-kafka:7.3.1
        restart: always
        mem_limit: 1024m
        ports:
            - "9092:9092"
        environment:
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_BROKER_ID=1
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        depends_on:
            - zookeeper

    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.1
        restart: always
        mem_limit: 512m
        ports:
            - "2181:2181"
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181

    product:
        build: microservices/product-service
        image: rufusy/product-service
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            mongodb:
                condition: service_healthy
            kafka:
                condition: service_started
            config-server:
                condition: service_healthy

    product-p1:
        build: microservices/product-service
        image: rufusy/product-service
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            mongodb:
                condition: service_healthy
            kafka:
                condition: service_started
            config-server:
                condition: service_healthy

    recommendation:
        build: microservices/recommendation-service
        image: rufusy/recommendation-service
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            mongodb:
                condition: service_healthy
            kafka:
                condition: service_started
            config-server:
                condition: service_healthy

    recommendation-p1:
        build: microservices/recommendation-service
        image: rufusy/recommendation-service
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            mongodb:
                condition: service_healthy
            kafka:
                condition: service_started
            config-server:
                condition: service_healthy

    review:
        build: microservices/review-service
        image: rufusy/review-service
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            mysql:
                condition: service_healthy
            kafka:
                condition: service_started
            config-server:
                condition: service_healthy

    review-p1:
        build: microservices/review-service
        image: rufusy/review-service
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            mysql:
                condition: service_healthy
            kafka:
                condition: service_started
            config-server:
                condition: service_healthy

    product-composite:
        build: microservices/product-composite-service
        image: rufusy/product-composite-service
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,kafka
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            kafka:
                condition: service_started
            config-server:
                condition: service_healthy

    eureka:
        build: spring-cloud/eureka-server
        image: rufusy/cmp-eureka-server
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        depends_on:
            config-server:
                condition: service_healthy

    gateway:
        build: spring-cloud/gateway
        image: rufusy/cmp-gateway
        environment:
            - SPRING_PROFILES_ACTIVE=docker
            - SERVER_SSL_KEY_STORE=file:/keystore/edge-test.p12
            - SERVER_SSL_KEY_STORE_PASSWORD=testtest
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        volumes:
            - $PWD/keystore:/keystore
        mem_limit: 512m
        ports:
            - "8443:8443"
        depends_on:
            config-server:
                condition: service_healthy

    auth-server:
        build: spring-cloud/authorization-server
        image: rufusy/cmp-auth-server
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
        healthcheck:
            test: ["CMD", "curl", "-fs", "http://localhost:9999/actuator/health"]
            interval: 5s
            timeout: 2s
            retries: 60
        depends_on:
            config-server:
                condition: service_healthy

    config-server:
        build: spring-cloud/config-server
        image: rufusy/cmp-config-server
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=docker,native
            - ENCRYPT_KEY=${CONFIG_SERVER_ENCRYPT_KEY}
            - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}
            - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}
        healthcheck:
            test: [ "CMD", "curl", "-fs", "http://localhost:8888/actuator/health" ]
            interval: 5s
            timeout: 2s
            retries: 60
        volumes:
            - $PWD/config-repo:/config-repo

    zipkin:
        image: openzipkin/zipkin:2.24.0
        restart: always
        mem_limit: 1024m
        environment:
            - STORAGE_TYPE=mem
        ports:
            - 9411:9411