plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.rufusy.microservices.composite'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

jar {
	/**
	 * Disable the creation of the new plain JAR file.
	 * We want to make it possible to refer to the ordinary JAR file with a wildcard when running the application e.g.
	 * java -jar microservices/product-service/build/libs/*.jar
	 */
	enabled = false
}

ext {
	springDocOpenApiVersion = "2.0.2" //version 2.6.0 doesn't set client id/secret in the header with swagger. @todo to update later
	springCloudVersion = "2023.0.3"
	resilience4jVersion = "2.2.0"
}

dependencies {
	implementation project(':api')
	implementation project(':util')

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.springdoc:springdoc-openapi-starter-webflux-api:${springDocOpenApiVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springDocOpenApiVersion}"

	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'

	implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"
	implementation "io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}"
	implementation "org.springframework.boot:spring-boot-starter-aop"

	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "io.github.resilience4j:resilience4j-bom:${resilience4jVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
