spring.application.name: gateway
server.forward-headers-strategy: framework
server:
  port: 8443
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keystore/edge.p12
    key-store-password: password
    key-alias: localhost

# Eureka
app:
  eureka-server: localhost
  eureka-username: user
  eureka-password: pwd
  auth-server: localhost

eureka:
    client:
        service-url.defaultZone: http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/
        initialInstanceInfoReplicationIntervalSeconds: 5
        registryFetchIntervalSeconds: 5
    instance:
        leaseRenewalIntervalInSeconds: 5
        leaseExpirationDurationInSeconds: 5

# Gateway
spring.cloud.gateway.routes:
  - id: product-composite
    uri: lb://product-composite
    predicates:
      - Path=/product-composite/**

  - id: product-composite-swagger-ui
    uri: lb://product-composite
    predicates:
      - Path=/openapi/**

  - id: eureka-api
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/api/{segment}
    filters:
      - SetPath=/eureka/{segment}

  - id: eureka-web-start
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/web
    filters:
      - SetPath=/

  - id: eureka-web-other
    uri: http://${app.eureka-server}:8761
    predicates:
      - Path=/eureka/**

  - id: auth-server-discovery
    uri: lb://auth-server
    predicates:
      - Path=/oauth2/.well-known/openid-configuration
    filters:
      - SetPath=/.well-known/openid-configuration

  - id: auth-server
    uri: lb://auth-server
    predicates:
      - Path=/oauth2/**

  - id: oauth2-login
    uri: lb://auth-server
    predicates:
      - Path=/login/**

  - id: oauth2-error
    uri: lb://auth-server
    predicates:
      - Path=/error/**

# Logging
logging:
    level:
        root: info
        org.springframework.cloud.gateway: trace
        org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: info
        org.springframework.web.server.adapter.HttpWebHandlerAdapter: trace

# OAuth 2.0
spring.security.oauth2.resourceserver.jwt.issuer-uri: http://${app.auth-server}:9999

# Health
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
management.endpoint.gateway.enabled: true
management:
  endpoint:
    env:
      show-values: always
---
spring.config.activate.on-profile: docker

server.port: 8443

app:
  eureka-server: eureka
  auth-server: auth-server
